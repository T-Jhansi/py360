# Generated by Django 4.2.7 on 2025-09-09 06:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('email_templates', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('to_email', models.EmailField(help_text='Recipient email address', max_length=254)),
                ('cc_emails', models.JSONField(blank=True, default=list, help_text='CC email addresses')),
                ('bcc_emails', models.JSONField(blank=True, default=list, help_text='BCC email addresses')),
                ('from_email', models.EmailField(help_text='Sender email address', max_length=254)),
                ('from_name', models.CharField(blank=True, help_text='Sender name', max_length=200)),
                ('reply_to', models.EmailField(blank=True, help_text='Reply-to email address', max_length=254)),
                ('subject', models.CharField(help_text='Email subject', max_length=500)),
                ('html_content', models.TextField(help_text='HTML email content')),
                ('text_content', models.TextField(blank=True, help_text='Plain text content')),
                ('template_context', models.JSONField(blank=True, default=dict, help_text='Context used for template rendering')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('sending', 'Sending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('provider_used', models.CharField(blank=True, help_text='Email provider used', max_length=100)),
                ('provider_message_id', models.CharField(blank=True, help_text="Provider's message ID", max_length=500)),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='When to send the email', null=True)),
                ('sent_at', models.DateTimeField(blank=True, help_text='When email was sent', null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='When email was delivered', null=True)),
                ('opened_at', models.DateTimeField(blank=True, help_text='When email was first opened', null=True)),
                ('clicked_at', models.DateTimeField(blank=True, help_text='When email was first clicked', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if failed')),
                ('retry_count', models.PositiveIntegerField(default=0, help_text='Number of retry attempts')),
                ('max_retries', models.PositiveIntegerField(default=3, help_text='Maximum retry attempts')),
                ('open_count', models.PositiveIntegerField(default=0, help_text='Number of times opened')),
                ('click_count', models.PositiveIntegerField(default=0, help_text='Number of times clicked')),
                ('bounce_reason', models.TextField(blank=True, help_text='Bounce reason if bounced')),
                ('campaign_id', models.CharField(blank=True, help_text='Campaign identifier', max_length=100)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, help_text='Template used for this email', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_emails', to='email_templates.emailtemplate')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailDeliveryReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('report_date', models.DateField(help_text='Date this report covers')),
                ('provider_name', models.CharField(help_text='Email provider name', max_length=100)),
                ('total_sent', models.PositiveIntegerField(default=0, help_text='Total emails sent')),
                ('total_delivered', models.PositiveIntegerField(default=0, help_text='Total emails delivered')),
                ('total_opened', models.PositiveIntegerField(default=0, help_text='Total emails opened')),
                ('total_clicked', models.PositiveIntegerField(default=0, help_text='Total emails clicked')),
                ('total_bounced', models.PositiveIntegerField(default=0, help_text='Total emails bounced')),
                ('total_failed', models.PositiveIntegerField(default=0, help_text='Total emails failed')),
                ('delivery_rate', models.FloatField(default=0.0, help_text='Delivery rate percentage')),
                ('open_rate', models.FloatField(default=0.0, help_text='Open rate percentage')),
                ('click_rate', models.FloatField(default=0.0, help_text='Click rate percentage')),
                ('bounce_rate', models.FloatField(default=0.0, help_text='Bounce rate percentage')),
                ('avg_response_time', models.FloatField(default=0.0, help_text='Average response time in seconds')),
                ('success_rate', models.FloatField(default=0.0, help_text='Overall success rate percentage')),
                ('report_data', models.JSONField(blank=True, default=dict, help_text='Additional report data')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_delivery_reports',
                'ordering': ['-report_date'],
            },
        ),
        migrations.CreateModel(
            name='EmailAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('period_start', models.DateTimeField(help_text='Start of analytics period')),
                ('period_end', models.DateTimeField(help_text='End of analytics period')),
                ('campaign_id', models.CharField(blank=True, help_text='Campaign identifier', max_length=100)),
                ('total_sent', models.PositiveIntegerField(default=0)),
                ('total_delivered', models.PositiveIntegerField(default=0)),
                ('total_opened', models.PositiveIntegerField(default=0)),
                ('total_clicked', models.PositiveIntegerField(default=0)),
                ('total_bounced', models.PositiveIntegerField(default=0)),
                ('total_unsubscribed', models.PositiveIntegerField(default=0)),
                ('delivery_rate', models.FloatField(default=0.0)),
                ('open_rate', models.FloatField(default=0.0)),
                ('click_rate', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('unsubscribe_rate', models.FloatField(default=0.0)),
                ('unique_opens', models.PositiveIntegerField(default=0, help_text='Unique email opens')),
                ('unique_clicks', models.PositiveIntegerField(default=0, help_text='Unique email clicks')),
                ('click_to_open_rate', models.FloatField(default=0.0, help_text='Click-to-open rate')),
                ('avg_time_to_open', models.FloatField(default=0.0, help_text='Average time to open in minutes')),
                ('avg_time_to_click', models.FloatField(default=0.0, help_text='Average time to click in minutes')),
                ('insights', models.JSONField(blank=True, default=dict, help_text='Additional analytics insights')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='email_templates.emailtemplate')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_analytics',
                'ordering': ['-period_end'],
            },
        ),
        migrations.CreateModel(
            name='EmailTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('event_type', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('unsubscribed', 'Unsubscribed'), ('complained', 'Complained')], max_length=20)),
                ('event_data', models.JSONField(blank=True, default=dict, help_text='Additional event data')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the event', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string')),
                ('referrer', models.URLField(blank=True, help_text='Referrer URL')),
                ('clicked_url', models.URLField(blank=True, help_text='URL that was clicked')),
                ('link_text', models.CharField(blank=True, help_text='Text of the clicked link', max_length=500)),
                ('event_timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='When the event occurred')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_events', to='email_operations.emailmessage')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_tracking',
                'ordering': ['-event_timestamp'],
                'indexes': [models.Index(fields=['email', 'event_type'], name='email_track_email_i_348576_idx'), models.Index(fields=['event_type', 'event_timestamp'], name='email_track_event_t_c40bf4_idx'), models.Index(fields=['ip_address', 'event_timestamp'], name='email_track_ip_addr_1d24fe_idx')],
            },
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='Queue name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Queue description')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('batch_size', models.PositiveIntegerField(default=100, help_text='Emails to process per batch')),
                ('delay_between_batches', models.PositiveIntegerField(default=60, help_text='Delay between batches in seconds')),
                ('max_retries', models.PositiveIntegerField(default=3, help_text='Maximum retry attempts')),
                ('total_emails', models.PositiveIntegerField(default=0, help_text='Total emails in queue')),
                ('processed_emails', models.PositiveIntegerField(default=0, help_text='Emails processed')),
                ('failed_emails', models.PositiveIntegerField(default=0, help_text='Emails failed')),
                ('success_rate', models.FloatField(default=0.0, help_text='Success rate percentage')),
                ('started_at', models.DateTimeField(blank=True, help_text='When processing started', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When processing completed', null=True)),
                ('estimated_completion', models.DateTimeField(blank=True, help_text='Estimated completion time', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if failed')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_queues',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='email_queue_status_1c3429_idx'), models.Index(fields=['started_at', 'status'], name='email_queue_started_d4e328_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['status', 'priority'], name='email_messa_status_039f46_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['to_email', 'status'], name='email_messa_to_emai_3e76ae_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['scheduled_at', 'status'], name='email_messa_schedul_5985c2_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['template', 'status'], name='email_messa_templat_786317_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['campaign_id', 'status'], name='email_messa_campaig_a9e08d_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['message_id'], name='email_messa_message_38c96a_idx'),
        ),
        migrations.AddIndex(
            model_name='emaildeliveryreport',
            index=models.Index(fields=['report_date', 'provider_name'], name='email_deliv_report__a8f827_idx'),
        ),
        migrations.AddIndex(
            model_name='emaildeliveryreport',
            index=models.Index(fields=['provider_name', 'report_date'], name='email_deliv_provide_0edaab_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='emaildeliveryreport',
            unique_together={('report_date', 'provider_name')},
        ),
        migrations.AddIndex(
            model_name='emailanalytics',
            index=models.Index(fields=['period_start', 'period_end'], name='email_analy_period__89d9eb_idx'),
        ),
        migrations.AddIndex(
            model_name='emailanalytics',
            index=models.Index(fields=['template', 'period_end'], name='email_analy_templat_a7d509_idx'),
        ),
        migrations.AddIndex(
            model_name='emailanalytics',
            index=models.Index(fields=['campaign_id', 'period_end'], name='email_analy_campaig_e43109_idx'),
        ),
    ]
